# first install the mvtnorm package
options(digits=4)
library(mvtnorm)
install.packages("mvtnorm")
# first install the mvtnorm package
options(digits=4)
library(mvtnorm)
mu.x = 0.05
sig.x = 0.10
mu.y = 0.025
sig.y = 0.05
# simulate from bivariate normal with rho = 0.9
rho.xy = 0.9
sig.xy = rho.xy*sig.x*sig.y
Sigma.xy = matrix(c(sig.x^2, sig.xy, sig.xy, sig.y^2), 2, 2, byrow=TRUE)
# use the rmvnorm() function to simulate from bivariate normal
?rmvnorm
n = 100
set.seed(123)
xy.vals = rmvnorm(n, mean=c(mu.x, mu.y), sigma=Sigma.xy)
head(xy.vals)
# scatterplot
plot(xy.vals[,1], xy.vals[,2], pch=16, cex=2, col="blue",
xlab="x", ylab="y")
title("Bivariate normal: rho=0.9")
abline(h=mu.y, v=mu.x)
segments(x0=0, y0=min(xy.vals[,2]), x1=0, y1=0, col="red")
segments(x0=min(xy.vals[,1]), y0=0, x1=0, y1=0, col="red")
?pmvnorm
pmvnorm(lower=c(-Inf, -Inf), upper=c(0, 0), mean=c(mu.x, mu.y), sigma=Sigma.xy)
rho.xy = 0
sig.xy = rho.xy*sig.x*sig.y
> Sigma.xy = matrix(c(sig.x^2, sig.xy, sig.xy, sig.y^2), 2, 2, byrow=TRUE)
> # use the rmvnorm() function to simulate from bivariate normal
> ?rmvnorm
> n = 100
> set.seed(123)
> xy.vals = rmvnorm(n, mean=c(mu.x, mu.y), sigma=Sigma.xy)
> head(xy.vals)
sig.xy = rho.xy*sig.x*sig.y
Sigma.xy = matrix(c(sig.x^2, sig.xy, sig.xy, sig.y^2), 2, 2, byrow=TRUE)
# use the rmvnorm() function to simulate from bivariate normal
?rmvnorm
n = 100
set.seed(123)
xy.vals = rmvnorm(n, mean=c(mu.x, mu.y), sigma=Sigma.xy)
head(xy.vals)
# scatterplot
plot(xy.vals[,1], xy.vals[,2], pch=16, cex=2, col="blue",
xlab="x", ylab="y")
title("Bivariate normal: rho=0.9")
abline(h=mu.y, v=mu.x)
segments(x0=0, y0=min(xy.vals[,2]), x1=0, y1=0, col="red")
segments(x0=min(xy.vals[,1]), y0=0, x1=0, y1=0, col="red")
# compute area under bivariate standard normal distribution
# Finc P( -00 < X < 0 and -00 < Y < 0)
?pmvnorm
pmvnorm(lower=c(-Inf, -Inf), upper=c(0, 0), mean=c(mu.x, mu.y), sigma=Sigma.xy)
rho.xy = -0.9
sig.xy = rho.xy*sig.x*sig.y
Sigma.xy = matrix(c(sig.x^2, sig.xy, sig.xy, sig.y^2), 2, 2, byrow=TRUE)
# use the rmvnorm() function to simulate from bivariate normal
?rmvnorm
n = 100
set.seed(123)
xy.vals = rmvnorm(n, mean=c(mu.x, mu.y), sigma=Sigma.xy)
head(xy.vals)
# scatterplot
plot(xy.vals[,1], xy.vals[,2], pch=16, cex=2, col="blue",
xlab="x", ylab="y")
title("Bivariate normal: rho=0.9")
abline(h=mu.y, v=mu.x)
segments(x0=0, y0=min(xy.vals[,2]), x1=0, y1=0, col="red")
segments(x0=min(xy.vals[,1]), y0=0, x1=0, y1=0, col="red")
# compute area under bivariate standard normal distribution
# Finc P( -00 < X < 0 and -00 < Y < 0)
?pmvnorm
pmvnorm(lower=c(-Inf, -Inf), upper=c(0, 0), mean=c(mu.x, mu.y), sigma=Sigma.xy)
qnorm
pnorm(0.1,0.05,0.1)
1-pnorm(0.1,0.05,0.1)
1-pnorm(-0.1,0.05,0.1)
pnorm(-0.1,0.05,0.1)
pnorm(0.15,0.05,0.1)-pnorm(-0.05,0.05,0.1)
qnorm(0.01,0.05,0.1)
qnorm(0.05,0.05,0.1)
qnorm(0.95,0.05,0.1)
qnorm(0.99,0.05,0.1)
qnorm(0.95,0.04,0.09)
qnorm(0.05,0.04,0.09)
qnorm(0.01,0.04,0.09)
ln(qnorm(0.05,0.04,0.09))
log(qnorm(0.05,0.04,0.09))
log(qnorm(0.05,0.04,0.09)+1)
41.29/38.23
log([1])
log(41.29/38.23)
0.1/41.29
(41.29/38.23)^12
log(41.29/38.23)*12
(41.29/38.23)*0.8+(41.74/41.11)*0.2
matA = matrix(data=c(1,4,7,2,4,8,6,1,3),nrow = 3, ncol = 3)
View(matA)
View(matA)
t(matA)
matA = t(matA)
View(matA)
View(matA)
matB = matrix(nrow=3,ncol=3)
View(matB)
View(matB)
matB = matrix(data=c(4,4,0,5,9,1,2,2,5))
matB = matrix(data=c(4,4,0,5,9,1,2,2,5),nrow = 3, ncol = 3)
View(matB)
View(matB)
matB = t(matB)
x = c(1,2,3)
fix(x)
fix(x)
x = matrix(data=c(1,2,3))
View(x)
View(x)
x = t(x)
y = matrix(data=c(5,2,7))
y = t(y)
View(y)
View(y)
View(x)
View(x)
x = t(x)
y = t(y)
View(y)
View(y)
View(x)
View(x)
matC = matA+matB
View(matC)
View(matC)
matC = matA - matB
View(matC)
View(matC)
matC = 2*matA
View(matC)
View(matC)
View(x)
View(x)
matA*x
matA%*%x
t(y)%*%matA%*%x
b = matrix(data=c(1,2))
View(b)
View(b)
matE = matrix(data=(1,1,2,4),2,2)
matE = matrix(data=c(1,1,2,4),2,2)
b%*%solve(matE)
imatE = solve(matE)
t(b)%*%imatE
imatE%*%b
mu = matrix(data=c(0.01,0.04,0.02),nrows=3,ncol=1)
mu = matrix(data=c(0.01,0.04,0.02),nrows=3,ncols=1)
mu = matrix(data=c(0.01,0.04,0.02),nrow=3,ncol=1)
w = matrix(data=c(1/3,1/3,1/3),nrow=1,ncol=1)
mu%*%t(w)
t%*%mu
w%*%mu
View(mu)
View(mu)
View(w)
View(w)
w = matrix(data=c(0.333,0.333,0.333),nrow=1,ncol=1)
w%*%mu
w = matrix(data=c(1/3,1/3,1/3),nrow=1,ncol=3)
View(mu)
View(mu)
View(w)
View(w)
w%*%mu
matV = matrix(data=c(0.10,0.30,0.10,0.3,0.15,-0.2,0.1,-0.2,0.08),ncol=3,nrow=3)
w%*%matV%*%t(w)
1+2
3 + 4
5 * 5
12 / 3
5^5
v=c(1,3,5,7)
v
l=c("Blue", 2, 5, "Red")
l
m=matrix(1:6,2,3)
m
2,5*2
2.5*5
m2=matrix(1:6)
m2
dim(m2)=c(2,3)
m2
x=1:6
y=5:10
x
y
cbind(x,y)
rbind(x,y)
attributes(m)
m
m[1,2]
? pnomr
? pnorm
(24-21)/5
pnorm(0.6)
qnorm(0.9,1500,300)
qnorm(0.1,21,5)
pnorm(50,45,3.2)
1-pnorm(50,45,3.2)
qnorm(0.2,mean=77,sd=5)
choose(9,1)
choose(9,9)
choose(9,0)
choose(9,8)
dbinom(8,size=10,p = 0.13)
sub(dbinom(70:245, size=245, p= 0.25))
sum(dbinom(70:245, size=245, p= 0.25))
dbinom(2, size = 10, p = 0.56)
dbinom(600, size = 1000, p = 0.56)
0.37*47
(1-0.37)*47
sum(dbinom(60, size = 100, p = 0.56))
sum(dbinom(60:100, size = 100, p = 0.56))
sd(c(5,8,12))
which.min(c(4,1,6))
8*6
2^16
2^
c(2,3,5,8,13)
country = c("Brazil","China","India","Switzerland", "USA")
lifeExepectancy = c(74,76,65,83,79)
Country[1]
country[1]
Sequence = seq(1,100,2)
Sequence
Data = data.frame(country,lifeExpectancy)
Data = data.frame(country,lifeExepectancy)
Data
population(199000,13900000,1240000,7997,31800)
population = c(199000,13900000,1240000,7997,31800)
Data2 = cbind(Data,population)
Data2
country = c("Australia", "Greece")
lifeExepectancy = c(78,58
)
getwd()
str(Data2)
summary(Data2)
find.package(devtools)
find.package(devtools)
find.package("devtools")
install.package("devtools")
ls
dir
cd ..
install.packages("devtools")
install.package("devtools")
install.packages("devtools")
install.packages("devtools")
lib
find.package("devtools")
find.packages("devtools")
find.packages("devtools")
find.package("devtools")
apt-get -y build-dep libcurl4-gnutls-dev ,  apt-get -y install libcurl4-gnutls-dev
curl-dev
install.packages("curl-dev")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
setwd("C:\\Users\\Marku_000\\Documents\\MOOCS\\John Hopkins\\Exploratory Data Analysis\\project1\\ExData_Plotting1")
power_consumption <- read.table("..\\household_power_consumption.txt", header = TRUE, sep=";", dec = ".", na.strings="?")
power_consumption$Date = as.Date(power_consumption$Date,"%d/%m/%Y")
power_consumption <- subset(power_consumption, Date >= "2007-02-01" & Date <= "2007-02-02")
View(power_consumption)
View(power_consumption)
plot(data=power_consumption, type="l", pch=".", xaxt="n", xlab=NA, ylab="Sub Metering Energy")
plot(extra~Date, data=power_consumption, type="l", pch=".", xaxt="n", xlab=NA, ylab="Sub Metering Energy")
plot(extra ~ Date, data=power_consumption, type="l", pch=".", xaxt="n", xlab=NA, ylab="Sub Metering Energy")
plot(data=power_consumption$Sub_metering_1, type="l", pch=".", xaxt="n", xlab=NA, ylab="Sub Metering Energy")
plot(xdata=power_consumption$Date, data=power_consumption$Sub_metering_1, type="l", pch=".", xaxt="n", xlab=NA, ylab="Sub Metering Energy")
plot(power_consumption$Sub_metering_1, type="l", pch=".", xaxt="n", xlab=NA, ylab="Sub Metering Energy")
lines(power_consumption$Sub_metering_2, col="blue")
lines(power_consumption$Sub_metering_2, col="red")
lines(power_consumption$Sub_metering_3, col="blue")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
legend("topright")
legend("topright", legend=c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"))
legend("topright", type = "l", col = c("grey","red","blue"), legend=c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"))
legend("topright",  col = c("grey","red","blue"), legend=c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"))
legend("topright",  pch=1, col = c("grey","red","blue"), legend=c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"))
legend("topright",  pch=1, col = c("black","red","blue"), legend=c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"))
legend("topright",  lty=1, , col = c("black","red","blue"), legend=c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"))
plot(power_consumption$Sub_metering_1, type="l", pch=".", xaxt="n", xlab=NA, ylab="Sub Metering Energy")
lines(power_consumption$Sub_metering_2, col="red")
lines(power_consumption$Sub_metering_3, col="blue")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
legend("topright",  lty=1, , col = c("black","red","blue"), legend=c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"))
png(filename = "Plot3.png", width = 480, height = 480)
plot(power_consumption$Sub_metering_1, type="l", pch=".", xaxt="n", xlab=NA, ylab="Sub Metering Energy")
lines(power_consumption$Sub_metering_2, col="red")
lines(power_consumption$Sub_metering_3, col="blue")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
legend("topright",  lty=1, , col = c("black","red","blue"), legend=c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"))
dev.off()
par(mfrow = c(2,2))
with(power_consumption, {plot(power_consumption$Sub_metering_1, type="l", pch=".", xaxt="n", xlab=NA, ylab="Sub Metering Energy")
lines(power_consumption$Sub_metering_2, col="red")
lines(power_consumption$Sub_metering_3, col="blue")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
legend("topright",  lty=1, , col = c("black","red","blue"), legend=c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"))})
plot(power_consumption$Voltage, type = "l", pch=".", xaxt="n", xlan=NA, ylab="Voltage")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
par(mfrow = c(2,2))
with(power_consumption, {
plot(power_consumption$Global_active_power, pch=".", xaxt="n", xlab=NA, ylab="Global Active Power (kilowatts)")
lines(power_consumption$Global_active_power, xaxt="n", ylab="Global Active Power (kilowatts)")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
plot(power_consumption$Voltage, type = "l", pch=".", xaxt="n", xlab=NA, ylab="Voltage", xlab = "datetime")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
plot(power_consumption$Sub_metering_1, type="l", pch=".", xaxt="n", xlab=NA, ylab="Sub Metering Energy")
lines(power_consumption$Sub_metering_2, col="red")
lines(power_consumption$Sub_metering_3, col="blue")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
legend("topright",  lty=1, , col = c("black","red","blue"), legend=c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"))
plot(power_consumption$Global_reactive_power, type = "l", pch=".", xaxt="n", , xlab = "datetime")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
})
dev.off()
par(mfrow = c(2,2))
with(power_consumption, {
plot(power_consumption$Global_active_power, pch=".", xaxt="n", xlab=NA, ylab="Global Active Power (kilowatts)")
lines(power_consumption$Global_active_power, xaxt="n", ylab="Global Active Power (kilowatts)")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
plot(power_consumption$Voltage, type = "l", pch=".", xaxt="n", ylab="Voltage", xlab = "datetime")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
plot(power_consumption$Sub_metering_1, type="l", pch=".", xaxt="n", xlab=NA, ylab="Sub Metering Energy")
lines(power_consumption$Sub_metering_2, col="red")
lines(power_consumption$Sub_metering_3, col="blue")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
legend("topright",  lty=1, , col = c("black","red","blue"), legend=c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"))
plot(power_consumption$Global_reactive_power, type = "l", pch=".", xaxt="n", , xlab = "datetime")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
})
dev.off()
par(mfrow = c(2,2))
with(power_consumption, {
plot(power_consumption$Global_active_power, pch=".", xaxt="n", xlab=NA, ylab="Global Active Power (kilowatts)")
lines(power_consumption$Global_active_power, xaxt="n", ylab="Global Active Power (kilowatts)")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
plot(power_consumption$Voltage, type = "l", pch=".", xaxt="n", ylab="Voltage", xlab = "datetime")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
plot(power_consumption$Sub_metering_1, type="l", pch=".", xaxt="n", xlab=NA, ylab="Sub Metering Energy")
lines(power_consumption$Sub_metering_2, col="red")
lines(power_consumption$Sub_metering_3, col="blue")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
legend("topright",  lty=1, , col = c("black","red","blue"), legend=c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"))
plot(power_consumption$Global_reactive_power, type = "l", pch=".", xaxt="n", , xlab = "datetime")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
})
png(filename = "Plot4.png", width = 480, height = 480)
par(mfrow = c(2,2))
with(power_consumption, {
plot(power_consumption$Global_active_power, pch=".", xaxt="n", xlab=NA, ylab="Global Active Power (kilowatts)")
lines(power_consumption$Global_active_power, xaxt="n", ylab="Global Active Power")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
plot(power_consumption$Voltage, type = "l", pch=".", xaxt="n", ylab="Voltage", xlab = "datetime")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
plot(power_consumption$Sub_metering_1, type="l", pch=".", xaxt="n", xlab=NA, ylab="Sub Metering Energy")
lines(power_consumption$Sub_metering_2, col="red")
lines(power_consumption$Sub_metering_3, col="blue")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
legend("topright",  lty=1, , col = c("black","red","blue"), legend=c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"))
plot(power_consumption$Global_reactive_power, type = "l", pch=".", xaxt="n", ylab="Global_reactive_power", xlab = "datetime")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
})
dev.off()
png(filename = "Plot4.png", width = 480, height = 480)
par(mfrow = c(2,2))
with(power_consumption, {
plot(power_consumption$Global_active_power, pch=".", xaxt="n", xlab=NA, ylab="Global Active Power")
lines(power_consumption$Global_active_power, xaxt="n", ylab="Global Active Power")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
plot(power_consumption$Voltage, type = "l", pch=".", xaxt="n", ylab="Voltage", xlab = "datetime")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
plot(power_consumption$Sub_metering_1, type="l", pch=".", xaxt="n", xlab=NA, ylab="Sub Metering Energy")
lines(power_consumption$Sub_metering_2, col="red")
lines(power_consumption$Sub_metering_3, col="blue")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
legend("topright",  lty=1, , col = c("black","red","blue"), legend=c("Sub_Metering_1", "Sub_Metering_2", "Sub_Metering_3"))
plot(power_consumption$Global_reactive_power, type = "l", pch=".", xaxt="n", ylab="Global_reactive_power", xlab = "datetime")
axis(side=1,at=c(1,1440,2880),labels=c("Thu","Fri","Sat"))
})
dev.off()
